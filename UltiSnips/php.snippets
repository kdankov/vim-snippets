priority -50

global !p
import vim

# Set g:ultisnips_php_scalar_types to 1 if you'd like to enable PHP 7's scalar types for return values
def isPHPScalarTypesEnabled():
	isEnabled = vim.eval("get(g:, 'ultisnips_php_scalar_types', 0)") == "1"
	return isEnabled or re.match('<\?php\s+declare\(strict_types=[01]\);', '\n'.join(vim.current.window.buffer))
endglobal

## Snippets from SnipMate, taken from
## https://github.com/scrooloose/snipmate-snippets.git

# echo - - - - - - - - - - - - - -

snippet e' "echo with single quote"
echo '$1';$0
endsnippet

# var dump - - - - - - - - - - - - - -

snippet vd "var_dump()"
var_dump( ${2:'$1'} );$0
endsnippet

# PHP Tags - - - - - - - - - - - - - -

snippet pt "php tags" i
<?php $1 ?>$0
endsnippet

snippet pte "php tags echo" i
<?php echo $1; ?>$0
endsnippet

snippet pif "php tags if" i
<?php if ( $1 ) { ?>
	$2
<?php } ?>$0
endsnippet

snippet pifem "php tags if" i
<?php if ( ! empty( $1 ) ) { ?>
	$2
<?php } ?>$0
endsnippet

snippet pife "php tags if else" i
<?php if ( $1 ) { ?>
	$2
<?php } else { ?>
	$3
<?php } ?>$0
endsnippet

# IF - - - - - - - - - - - - - -

snippet if "if"
if ( $1 ) {
	$2
}$0
endsnippet

snippet ife "if else"
if ( $1 ) {
	$2
} else {
	$3
}$0
endsnippet

snippet fu "Function snip" b
function ${1:name}( ${2:$param} )
{
	${VISUAL}${3:return null;}
}
$0
endsnippet

# :vim:ft=snippets:
